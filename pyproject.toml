[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "end-to-end-pipeline-sdk"
version = "0.1.0"
description = "End-to-End Data Pipeline SDK"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
dependencies = [
    "pyspark>=3.3.0",
    "apache-airflow>=2.4.0",
    "kafka-python>=2.0.2",
    "elasticsearch>=8.0.0",
    "redis>=4.3.4",
    "great-expectations>=0.15.0",
    "sqlalchemy>=1.4.0",
    "pandas>=1.5.0",
    "minio>=7.1.0",
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
    "python-dotenv>=0.19.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950"
]

[project.scripts]
e2e-pipeline = "sdk.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["sdk*", "airflow*", "spark*", "governance*", "monitoring*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra"
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*", "*/__pycache__/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true